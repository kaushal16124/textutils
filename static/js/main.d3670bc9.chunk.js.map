{"version":3,"sources":["components/About.js","components/Navbar.js","components/TextForm.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","myStyle","setmyStyle","useState","color","backgroundColor","buttonText","setbuttonText","_jsxs","className","style","children","_jsx","id","type","onClick","toggleStyle","Navbar","props","concat","mode","href","title","Link","to","class","role","toggleMode","for","placeholder","TextForm","text","setText","_Fragment","heading","onChange","event","console","log","target","value","rows","handleUpClick","newText","toUpperCase","handleLoClick","toLowerCase","split","length","Alert","alert","msg","App","darkMode","setDarkMode","setAlert","showAlert","message","setTimeout","BrowserRouter","document","body","Routes","Route","exact","path","element","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","React","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.d3670bc9.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nexport default function About() {\r\n\r\n  const [myStyle,setmyStyle] = useState({\r\n    color: 'black',\r\n    backgroundColor: 'white'\r\n  })\r\n\r\n  const [buttonText,setbuttonText] = useState(\"Enable Dark Mode\")\r\n\r\n   const toggleStyle = ()=> {\r\n    if(myStyle.color == 'white') {\r\n      setmyStyle({\r\n        color: 'black',\r\n        backgroundColor: 'white'\r\n      })\r\n\r\n      setbuttonText(\"Enable Dark Mode\")\r\n    }\r\n    else {\r\n      setmyStyle({\r\n        color: 'white',\r\n        backgroundColor: 'black'\r\n      })\r\n      setbuttonText(\"Enable Light Mode\")\r\n\r\n    }\r\n  }\r\n\r\n  \r\n  return (\r\n    <div className=\"container\" style={myStyle}>\r\n      <h2 className='my-2'>About Us</h2>\r\n      <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        Accordion Item #1\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the first item's accordion body.</strong> It is shown by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n        Accordion Item #2\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the second item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\" style={myStyle}>\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        Accordion Item #3\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\">\r\n        <strong>This is the third item's accordion body.</strong> It is hidden by default, until the collapse plugin adds the appropriate classNamees that we use to style each element. These classNamees control the overall appearance, as well as the showing and hiding via CSS transitions. You can modify any of this with custom CSS or overriding our default variables. It's also worth noting that just about any HTML can go within the <code>.accordion-body</code>, though the transition does limit overflow.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n<div className=\"container my-3\">\r\n<button type=\"button\" onClick={toggleStyle} className=\"btn btn-primary\">{buttonText}</button>\r\n</div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport {Link} from 'react-router-dom'\r\n\r\nexport default function Navbar(props) {\r\n  return (\r\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n  <div className=\"container-fluid\">\r\n    <a className=\"navbar-brand\" href=\"/\">{props.title}</a>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n      <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n      <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n        <li className=\"nav-item\">\r\n          <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n        </li>\r\n        <li className=\"nav-item\" mb-2 mb-lg-0>\r\n          <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n        </li>\r\n        <li class=\"nav-item dropdown\">\r\n          <a class=\"nav-link dropdown-toggle\" href=\"#\" role=\"button\" data-bs-toggle=\"dropdown\" aria-expanded=\"false\">\r\n          Recipes\r\n          </a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a class=\"dropdown-item\" href=\"#\">Pav Bhaji</a></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Masala Dosa</a></li>\r\n            <li><hr class=\"dropdown-divider\"/></li>\r\n            <li><a class=\"dropdown-item\" href=\"#\">Explore all recipes</a></li>\r\n          </ul>\r\n        </li>\r\n      </ul>\r\n      \r\n      <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'} my-2`}>\r\n      <input className=\"form-check-input\" type=\"checkbox\" onClick={props.toggleMode} role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n      <label className=\"form-check-label\" for=\"flexSwitchCheckDefault\">Dark Mode  </label>\r\n       </div>\r\n       \r\n\r\n      <form className=\"d-flex text-light my-2\" role=\"search\">\r\n        <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n        <button className=\"btn btn-outline-primary\" type=\"submit\">Search</button>\r\n      </form>\r\n    </div>\r\n  </div>\r\n</nav>\r\n  )\r\n}\r\n","import React, {useState} from 'react'\r\n\r\nexport default function TextForm(props) {\r\n    const handleUpClick = ()=> {\r\n        console.log(\"Button clicked\");\r\n        let newText=text.toUpperCase();\r\n        setText(newText);\r\n        console.log(newText);\r\n    }\r\n    const handleLoClick = ()=> {\r\n        console.log(\"Button clicked\");\r\n        let newText=text.toLowerCase();\r\n        setText(newText);\r\n        console.log(newText);\r\n    }\r\n    const handleOnChange = (event)=> {\r\n        console.log(\"Text changed\");\r\n        setText(event.target.value);\r\n    }\r\n    const [text, setText] = useState('Enter text here');\r\n  return (\r\n    <>\r\n\r\n    <div className=\"container\">\r\n            <div className=\"mb-3\">\r\n                <h1>{props.heading}</h1>\r\n            <label for=\"myBox\" className=\"form-label\"></label>\r\n            <textarea className=\"form-control\" onChange={handleOnChange} value={text} id=\"myBox\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleUpClick}>UPPERCASE</button>\r\n            <button type=\"button\" className=\"btn btn-primary mx-2\" onClick={handleLoClick}>lowercase</button>\r\n\r\n    </div>\r\n\r\n    <div className=\"container\">\r\n        <h1>Text Summary</h1>\r\n        <p>{text.split(\" \").length} words {text.length} characters</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    \r\n      props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n        <strong>{props.alert.type}</strong> : {props.alert.msg}\r\n      </div>\r\n  \r\n  )\r\n}\r\n","import React,{ useState } from 'react';\nimport './App.css';\nimport About from './components/About';\nimport Navbar from './components/Navbar';\nimport TextForm from './components/TextForm';\nimport Alert from './components/Alert';\n\nimport { BrowserRouter,Route, Routes } from \"react-router-dom\";\n\n\n\nfunction App() {\n  const [darkMode,setDarkMode] = useState('light');\n  const [alert,setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n\n    setTimeout(() => {\n      setAlert(null);\n    },1500)\n  }\n  const toggleMode = () => {\n    if(darkMode=='light') {\n      setDarkMode('dark');\n      document.body.style.backgroundColor = '#042743';\n      showAlert(\"Dark mode enabled\",\"success\");\n    }else {\n      setDarkMode('light');\n      document.body.style.backgroundColor = 'white';\n      showAlert(\"Light mode enabled\",\"success\");\n    }\n  }\n  return (\n    <>\n    <BrowserRouter>\n        <Navbar title=\"Pinku's Food Blogs\" mode={darkMode} toggleMode={toggleMode}/>\n        <Alert alert={alert}/>\n        <div className=\"container\">\n\n        <Routes>\n\n        <Route exact path=\"/about\" element={<About />}></Route>\n\n        <Route\n          exact path=\"/\"\n          \n          element={\n            // <Textbox\n            //   showAlert={showAlert}\n            //   heading=\"Enter Text to analyze \"\n            //   mode={mode}\n            // />\n            <TextForm heading=\"Enter the text\"/>\n\n          }\n        ></Route>\n        </Routes>\n\n        </div>\n    \n    </BrowserRouter>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}